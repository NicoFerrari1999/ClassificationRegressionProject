mse <- rep(0, length(model$lambda))
for (j in 1:length(model$lambda)) {
mse[j] <- mse[j] + mean((predic[,j] - Possum_Dataset[Test_Possum,6])^2)
}
}
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
predic <- predict(model, newx = Possum_Dataset[Test_Possum,-8])
gc()
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
n_iter <- 10
set.seed(123)
folds <- cut(seq(1, nrow(Possum_Dataset)), breaks = n_iter, labels = FALSE)
for(i in 1:n_iter) {
# We use the i-th fold for testing and the rest for training
Test_Possum <- which(folds==i, arr.ind = TRUE)
Train_Possum <- which(folds!=i)
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
predic <- predict(model, newx = Possum_Dataset[Test_Possum,-8])
mse <- rep(0, length(model$lambda))
for (j in 1:length(model$lambda)) {
mse[j] <- mse[j] + mean((predic[,j] - Possum_Dataset[Test_Possum,6])^2)
}
}
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
model <- glmnet(x = Possum_Dataset[Train_Possum,8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
Possum_Dataset[Train_Possum,-8]
Possum_Dataset[Train_Possum,8]
Train_Possum <- which(folds!=i)
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
predic <- predict(model, newx = Possum_Dataset[Test_Possum,-8])
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,-6], alpha = 0)
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,-6], alpha = 0)
model <- glmnet(x = Possum_Dataset[Train_Possum,-8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
model <- glmnet(x = Possum_Dataset[Train_Possum,8], y = Possum_Dataset[Train_Possum,6], alpha = 0)
model <- glmnet(x = Possum_Dataset[Train_Possum,8], y = Possum_Dataset[Train_Possum,-6], alpha = 0)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
Possum_Dataset$hdlngth
mean(Possum_Dataset$hdlngth)
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < 92.73069, "short", "long")
Possum_Dataset
# We convert
mean_head_length <- mean(Possum_Dataset$hdlngth)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
n_iter <- 10
# We convert
mean_head_length <- mean(Possum_Dataset$hdlngth)
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean_head_length, "short", "long")
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
n_iter <- 10
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "short", "long")
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
library(caret)
library(glmnet)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
#We convert the length of the head given the mean value of the lengths in short or long
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "short", "long")
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
fit <- glm(hdlngth ~ totlnght, data = Train_Possum, family = binomial)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
#We convert the length of the head given the mean value of the lengths in short or long
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "short", "long")
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
fit <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
fit <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "0", "1")
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$sex <- ifelse(Possum_Dataset$sex == "m", 0, 1)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "0", "1")
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
fit <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
results_logit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
results_logit
plot(Train_Possum$hdlngth, Train_Possum$totlngth)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "0", "1")
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
fit <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
results_logit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
results_logit
plot(Train_Possum$hdlngth, Train_Possum$totlngth)
abline(fit_lm, col = "red")
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), "0", "1")
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
results_logit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
results_logit
abline(model, col = "red")
model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
results_logit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
results_logit
plot(Train_Possum$hdlngth, Train_Possum$totlngth)
abline(model, col = "red")
abline(model, col = "red")
plot(Train_Possum$hdlngth, Train_Possum$totlngth)
abline(model, col = "red")
plot(totlngth, hdlngth, type = 1)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
cv_bl_logit <- cv.glmnet(x = as.matrix(Train_Possum[, "totlngth"]),
y = as.numeric(Train_Possum[, "hdlngth"]) - 1,
family = "binomial",
type.measure = "class")
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
control <- trainControl(method = "cv", number = 5)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 5)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
predict_bl <- predict(bl_model_cv, newdata = Test_Possum)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
predict_bl <- predict(bl_model_cv, newdata = Test_Possum)
library(ggplot2)
ggplot(Train_Possum, aes(x = totlngth, y = hdlngth)) +
geom_point() +
geom_line(aes(x = Test_Possum$totlngth, y = predict_bl), color = "red", size = 1) +
labs(x = "Total Length", y = "Head Length") +
ggtitle("Binary Logistic Regression with Cross-Validation")
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary, metric = "ROC")
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary, metric = "ROC")
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary, metric = "Accuracy")
control <- trainControl(method = "cv", number = 10)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
control <- trainControl(method = "cv", number = 10, metric = "ROC")
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, metric = "ROC")
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- factor(Train_Possum$hdlngth)
Test_Possum <- Possum_Dataset[-index, ]
Test_Possum$hdlngth <- factor(Test_Possum$hdlngth)
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- factor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
Test_Possum$hdlngth <- factor(Test_Possum$hdlngth)
Test_Possum$totlngth <- factor(Test_Possum$totlngth)
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
control <- trainControl(method = "cv", number = 10)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- as.factorfactor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- as.factorfactor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- as.factor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
Test_Possum$hdlngth <- as.factor(Test_Possum$hdlngth)
Test_Possum$totlngth <- as.factor(Test_Possum$totlngth)
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Train_Possum <- as.factor(Train_Possum)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum <- as.factor(Train_Possum)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Test_Possum <- Possum_Dataset[-index, ]
Test_Possum$hdlngth <- as.factor(Test_Possum$hdlngth)
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- as.factor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
levels(Train_Possum$hdlngth)
Train_Possum$hdlngth <- gsub(" ", "_", Train_Possum$hdlngth)
Train_Possum$hdlngth <- gsub("[^a-zA-Z0-9._]", "_", Train_Possum$hdlngth)
levels(Train_Possum$hdlngth)
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- as.factor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Train_Possum$hdlngth <- as.factor(Train_Possum$hdlngth)
Train_Possum$totlngth <- as.factor(Train_Possum$totlngth)
Test_Possum <- Possum_Dataset[-index, ]
levels(Train_Possum$hdlngth)
Train_Possum$hdlngth <- gsub(" ", "_", Train_Possum$hdlngth)
Train_Possum$hdlngth <- gsub("[^a-zA-Z0-9._]", "_", Train_Possum$hdlngth)
levels(Train_Possum$hdlngth)
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
#We convert the length of the head given the mean value of the lengths in short = 0 or long = 1
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
levels(Train_Possum$hdlngth)
Train_Possum$hdlngth <- gsub(" ", "_", Train_Possum$hdlngth)
Train_Possum$hdlngth <- gsub("[^a-zA-Z0-9._]", "_", Train_Possum$hdlngth)
levels(Train_Possum$hdlngth)
bl_model <- glm(hdlngth ~ totlngth, data = Train_Possum, family = binomial)
control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
bl_model_cv <- train(totlngth ~ hdlngth, data = Train_Possum, method = "glm", family = binomial, trControl = control)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
set.seed(123)
index <- createDataPartition(Possum_Dataset$hdlngth, p = 0.7, list = FALSE)
Train_Possum <- Possum_Dataset[index, ]
Test_Possum <- Possum_Dataset[-index, ]
model_fit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial("logit"), trControl = trainControl(method = "cv", number = 5))
model_fit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial("logit"))
model_fit <- train(hdlngth ~ totlngth, data = Train_Possum, method = "glm", family = binomial("logit"))
warnings()
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
# Splitting dataset
split <- sample.split(Possum_Dataset, SplitRatio = 0.8)
library(caTools)
library(ROCR)
# Splitting dataset
split <- sample.split(Possum_Dataset, SplitRatio = 0.8)
split
mtcars
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
length(Possum_Dataset$hdlngth)
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
length(Possum_Dataset$hdlngth)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
length(Possum_Dataset$hdlngth)
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
length(Possum_Dataset$hdlngth)
# Training model
logistic_model <- glm(hdlngth ~ totlngth,
data = Train_Possum,
family = "binomial")
# Splitting dataset
split <- sample.split(Possum_Dataset, SplitRatio = 0.8)
split
Train_Possum <- subset(Possum_Dataset, split == "TRUE")
Test_Possum <- subset(Possum_Dataset, split == "FALSE")
# Training model
logistic_model <- glm(hdlngth ~ totlngth,
data = Train_Possum,
family = "binomial")
logistic_model
# Summary
summary(logistic_model)
# Predict test data based on model
predict_reg <- predict(logistic_model,
Test_Possum, type = "response")
predict_reg
# Changing probabilities
predict_reg <- ifelse(predict_reg >0.5, 1, 0)
# Evaluating model accuracy
# using confusion matrix
table(Test_Possum$hdlngth, predict_reg)
missing_classerr <- mean(predict_reg != Test_Possum$hdlngth)
print(paste('Accuracy =', 1 - missing_classerr))
# ROC-AUC Curve
ROCPred <- prediction(predict_reg, Test_Possum$hdlngth)
mtcars
ROCPer <- performance(ROCPred, measure = "tpr",
x.measure = "fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
# Plotting curve
plot(ROCPer)
plot(ROCPer, colorize = TRUE,
print.cutoffs.at = seq(0.1, by = 0.1),
main = "ROC CURVE")
abline(a = 0, b = 1)
auc <- round(auc, 4)
legend(.6, .4, auc, title = "AUC", cex = 1)
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
# Splitting dataset
split <- sample.split(Possum_Dataset, SplitRatio = 0.8)
Train_Possum <- subset(Possum_Dataset, split == "TRUE")
Test_Possum <- subset(Possum_Dataset, split == "FALSE")
logistic_model <- glm(hdlngth ~ totlngth,
data = Train_Possum,
family = "binomial")
logistic_model
# Predict test data based on model
pred <- predict(logistic_model, Test_Possum, type = "response")
predict_reg
pred
pred
# Changing probabilities
pred <- ifelse(pred >0.5, 1, 0)
# Evaluating model accuracy
# using confusion matrix
table(Test_Possum$hdlngth, pred)
missing_classerr <- mean(predict_reg != Test_Possum$hdlngth)
missing_classerr <- mean(pred != Test_Possum$hdlngth)
miss_class_err <- mean(pred != Test_Possum$hdlngth)
print(paste('Accuracy =', 1 - miss_class_err))
Possum_Dataset <- read.csv("C:\\Users\\Nico\\Desktop\\Progetto Morasca\\Regression\\possum.csv")
Possum_Dataset <- na.omit(Possum_Dataset)
Possum_Dataset$hdlngth <- ifelse(Possum_Dataset$hdlngth < mean(Possum_Dataset$hdlngth), 0, 1)
# Splitting dataset
split <- sample.split(Possum_Dataset, SplitRatio = 0.8)
Train_Possum <- subset(Possum_Dataset, split == "TRUE")
Test_Possum <- subset(Possum_Dataset, split == "FALSE")
logistic_model <- glm(hdlngth ~ totlngth,
data = Train_Possum,
family = "binomial")
# Predict test data based on model
pred <- predict(logistic_model, Test_Possum, type = "response")
pred
# Changing probabilities
pred <- ifelse(pred >0.5, 1, 0)
# Evaluating model accuracy
# using confusion matrix
table(Test_Possum$hdlngth, pred)
miss_class_err <- mean(pred != Test_Possum$hdlngth)
print(paste('Accuracy =', 1 - miss_class_err))
# ROC-AUC Curve
ROCPred <- prediction(predict_reg, Test_Possum$hdlngth)
# ROC-AUC Curve
ROCPred <- prediction(pred, Test_Possum$hdlngth)
ROCPer <- performance(ROCPred, measure = "tpr",
x.measure = "fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
# Plotting curve
plot(ROCPer)
plot(ROCPer, colorize = TRUE,
print.cutoffs.at = seq(0.1, by = 0.1),
main = "ROC CURVE")
abline(a = 0, b = 1)
auc <- round(auc, 4)
legend(.6, .4, auc, title = "AUC", cex = 1)
